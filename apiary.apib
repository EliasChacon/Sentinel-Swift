FORMAT: 1A
HOST: http://localhost:9088/services

# Sentinel Swift REST
Servicios REST que utilizará Sentinel Swift.

# Group PU Services

##getConfig [/getConfig]
Obtiene la configuración de un flujo
### getConfig [POST]
+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

        {
            "Processing Unit": "1",
            "published_at": "2015-08-05T08:40:51.620Z"
        }

## isAlive [/isAlive]
Verifica si un flujo está funcionando correctamente.
### isAlive [POST]


+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body

            {
                "status": true
            }

## stats [/stats]
Retorna las estadísticas de los servicios.
### stats [GET]

+ Response 200 (application/json)

    + Body

            {
                "stats": true
            }
            
## putConfig [/putConfig]
Envía la configuración de un flujo.
### putConfig [POST]

+ Request (application/json)

        {
            "idFlujo": "readFile",
            "config": "algo"
        }

+ Response 200 (application/json)

## pause [/pause]
Detiene un flujo.
### pause [POST]

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)


## start [/start]
Reinicia un flujo.
### start [POST]

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

## status [/status]
Obtiene el estado de un flujo.
### status [POST]

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body
    
            {
                "status": "ok"
            }
            
# Group File Handler Services

## putSource [/putSource]
Almacena las configuraciones de los flujos
### putSource [POST]
+ Request (application/json)

        [{
            "tipoMsj": "MTE",
            "tipoFlujo": "E",
            "codMsj": 103,
            "path": "C://Desktop/Entrada"
        }]

+ Response 200 (application/json)

    + Body
    
            {
                "status": "ok"
            }

## getSource [/getSource]
Verifica si un flujo está funcionando correctamente.
### getSource [POST]


+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body

            {
                "tipoMsj": "MTE",
                "tipoFlujo": "E",
                "codMsj": 103,
                "path": "C://Desktop/Entrada"
            }

## putDestinies [/putDestinies]
Retorna las estadísticas de los servicios.
### putDestinies [POST]

+ Request (application/json)

        [{
            "tipoMsj": "MTE",
            "tipoFlujo": "E",
            "codMsj": 103,
            "path": "C://Desktop/Entrada"
        }]

+ Response 200 (application/json)

    + Body

            {
                "status": "ok"
            }
            
## getDestinies [/getDestinies]
Envía la configuración de un flujo.
### getDestinies [POST]

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body

            {
                "stats": true
            }