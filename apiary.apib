FORMAT: 1A
HOST: http://localhost:9088/services

# Sentinel Swift REST

Mock de los servicios REST que utilizará Sentinel Swift.

##getConfig [/getConfig]
### getConfig [POST]
Obtiene la configuración de un flujo
+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

        {
            "Processing Unit": "1",
            "published_at": "2015-08-05T08:40:51.620Z"
        }

## isAlive [/isAlive]
### isAlive [POST]

Verifica si un flujo esta funcionando correctamente.

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body

            {
                "status": true
            }

## stats [/stats]
### stats [GET]

Retorna las estadísticas de los servicios.

+ Response 200 (application/json)

    + Body

            {
                "stats": true
            }
            
## putConfig [/putConfig]
### putConfig [POST]

Envía la configuración de un flujo.

+ Request (application/json)

        {
            "idFlujo": "readFile",
            "config": "algo"
        }

+ Response 200 (application/json)

## pause [/pause]
### pause [POST]

Detiene un flujo.

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)


## start [/start]
### start [POST]

Reinicia un flujo.

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

## status [/status]
### status [POST]

Obtiene el estado de un flujo.

+ Request (application/json)

        {
            "idFlujo": "readFile"
        }

+ Response 200 (application/json)

    + Body
    
            {
                "status": "ok"
            }